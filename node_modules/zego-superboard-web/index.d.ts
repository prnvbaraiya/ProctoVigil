/**
 * 接口类，SDK初始化相关，全局性的功能设置相关，创建文件或者纯白板等。
 *
 * 详情描述：接口类，SDK的初始化，房间内全局性的功能设置, 创建文件或者纯白板等。
 *
 * 业务场景：主要用于初始化SDK，设置白板的一些工具、缩放同步、画笔效果，在开启boardView模式下,获取boardView, 创建纯白板、文件等。
 *
 * 平台差异：无。
 *
 */
export declare class ZegoSuperBoardManager {
    private static instance;
    private zegoSuperBoardService;
    private constructor();
    /**
     * 获取 ZegoSuperBoardManager 实例对象
     *
     * 支持版本：2.0.0 及以上。
     *
     * 详情描述：获取 ZegoSuperBoardManager 实例对象才能调用 ZegoSuperBoardManager 中的接口方法 。
     *
     * 调用时机：集成 ZegoSuperBoard SDK之后，初始化 ZegoSuperBoard SDK 之前。
     *
     * @return ZegoSuperBoardManager 实例对象
     */
    static getInstance(): ZegoSuperBoardManager;
    /**
     * 初始化 ZegoSuperBoard SDK
     *
     * 支持版本：2.0.0 及以上。
     *
     * 详情描述：初始化ZegoSuperBoard SDK的方法。
     *
     * 业务场景：初始化 ZegoSuperBoard SDK。
     *
     * 调用时机：在使用SDK功能前必须首先调用该初始化方法,如果不初始化会导致功能不可用。
     *
     * 相关接口：unInit。
     *
     * @param zegoWebRTC Express-Video SDK 的实例
     * @param config SDK 初始化所需要的配置信息
     *
     * @return 初始化的结果回调
     */
    init(zegoWebRTC: any, config: ZegoSuperBoardInitConfig): Promise<boolean>;
    /**
     * 设置配置项
     *
     * 支持版本：2.0.0 及以上。
     * 调用时机：初始化 Superboard SDK 前调用
     *
     * @param key 配置项
     * @param value 配置项的值
     *
     * @return 设置是否成功
     */
    setCustomizedConfig(key: ZegoSuperboardCustomConfigKey, value: string): boolean;
    /**
     * 获取设置的配置项的值
     *
     * 支持版本：2.0.0及以上。
     *
     * 详情描述：获取设置的配置项的值。
     *
     * 调用时机：初始化 Superboard SDK，调用 setCustomizedConfig 之后。
     *
     * @param key 要获取的设置项
     *
     * @return 获取设置的配置项的值
     */
    getCustomizedConfig(key: ZegoSuperboardCustomConfigKey): string;
    /**
     * 注册监听事件
     *
     * 支持版本：2.0.0及以上。
     *
     * 业务场景：可通过注册指定方法获取相关信息，例如注册切换白板通知事件，即可监听对端实时切换白板的 UniqueID。
     *
     * 调用时机：初始化 ZegoSuperBoard SDK 之后。
     *
     * @param event 监听事件名
     * @param callBack 回调函数
     *
     * @return 注册是否成功
     */
    on<K extends keyof ZegoEvent>(event: K, listener: ZegoEvent[K]): boolean;
    /**
     * 删除监听事件
     *
     * 支持版本：2.0.0及以上。
     *
     * 详情描述：可删除指定监听事件。
     *
     * 调用时机：初始化 ZegoSuperboard SDK 且注册了监听事件后。
     *
     * @param event 需要解除监听事件名称
     * @param listener? 回调函数
     *
     * @return 解除是否成功
     */
    off<K extends keyof ZegoEvent>(event: K, listener?: ZegoEvent[K]): boolean;
    /**
     * 获取SDK的版本号
     *
     * 支持版本：v2.0.0 及以上。
     *
     * 详情描述：获取 SDK 版本号。
     *
     * 业务场景：
     * 1. SDK 在运行过程中，当开发者发现与预期情况不符时，可将问题与相关日志提交给 ZEGO 技术人员定位，ZEGO 技术人员可能需要 SDK 的版本的信息来辅助定位问题。
     * 2. 开发者也可以收集此信息作为 App 所使用的 SDK 的版本信息，以便统计线上各版本 App 对应的各版本 SDK。
     *
     * 调用时机：在任意时刻均可调用。
     *
     * @return SDK的版本号
     */
    getSDKVersion(): string;
    /**
     * 获取 BoardView 对象
     *
     * 支持版本：2.0.0及以上。
     *
     * 详情描述：开了 SuperBoardView 模式，获取该对象。
     *
     * 业务场景：在开启 SuperBoardView 模式下，使用该对象上的方法进行 A 端切换白板，B 端自动同步。
     *
     * 默认值：默认获得该对象。
     *
     * 调用时机：初始化 ZegoSuperboard SDK 之后。
     *
     * 注意事项：如果使用 enableSuperBoardView 接口并设置为 false ，则无法获取 SuperBoardView 对象。
     *
     * @return BoardView 对象
     */
    getSuperBoardView(): ZegoSuperBoardView;
    /**
     * 设置是否使用 SuperBoardView
     *
     * 支持版本：2.0.0 及以上。
     *
     * 详情描述：设置是否使用 SuperBoardView。
     *
     * 调用时机：初始化SDK之前。
     *
     * 注意事项：默认开启
     *
     * @param enable true 代表使用 SuperBoardView, false 代表不使用, 默认为 true.
     */
    enableSuperBoardView(enable: boolean): void;
    /**
     * 获取指定的 SuperBoardSubView
     *
     * 支持版本： 2.0.0及以上
     *
     * 调用时机：初始化SDK，进房成功后，获取到SuperBoardSubView列表之后调用。
     *
     * 注意事项：仅限于不使用 SuperBoardView 的场景
     *
     * @param uniqueID ZegoSuperBoardSubView 对象的唯一标识
     */
    getSuperBoardSubView(uniqueID: string): ZegoSuperBoardSubView | null;
    /**
     * 添加 SuperBoardSubView 到视图
     *
     * 支持版本：2.0.0及以上。
     *
     * 详情描述：在未开启 BoardView 模式下，手动添加 SuperBoardSubView 到视图
     *
     * 调用时机：初始化 ZegoSuperBoard SDK 且调用 enableSuperBoardView 接口设置为 false。
     *
     * 注意事项：添加目标视图的物理像素宽高不得小于 0。
     *
     * 相关回调：操作端添加 SuperBoardSubView 到视图，对端可通过 remoteSuperBoardSubViewAdded 监听获取。
     *
     * @param subView 要挂载 BoardSubView 对象
     * @param parentDomID 要挂载点父容器 ID
     * 注意事项：请确保在调用该方法时，父容器 ID 真实存在，宽高的物理像素不为 0
     */
    attachSuperBoardSubView(subView: ZegoSuperBoardSubView, parentDomID: string): Promise<void>;
    /**
     * 创建纯白板
     *
     * 支持版本：2.0.0 及以上。
     *
     * 调用时机：初始化 ZegoSuperboard SDK，调用 [loginRoom] 登录房间之后，需要创建纯白板的时候。
     *
     * @param config 纯白板相关的配置参数。其中 perPageWidth，perPageHeight 必须要正整数，否则创建失败
     *
     * @return 返回该白板的 model
     */
    createWhiteboardView(config: ZegoCreateWhiteboardConfig): Promise<ZegoSuperBoardSubViewModel>;
    /**
     * 创建文件白板
     *
     * 支持版本：2.0.0 及以上。
     *
     * 详情描述：创建成功后会内部保存对应的SubView并返回它的 subViewModel 数据
     *
     * 调用时机：初始化 ZegoSuperboard SDK，调用 [loginRoom] 登录房间之后，需要创建文件的时候。
     *
     * @param config 创建文件需要的配置参数
     *
     * @return 返回该文件白板的 model
     */
    createFileView(config: ZegoCreateFileConfig): Promise<ZegoSuperBoardSubViewModel>;
    /**
     * 销毁指定的 SuperBoardSubView 视图
     *
     * 支持版本：2.0.0 及以上。
     *
     * 调用时机：在调用querySuperBoardSubViewList 拉取到列表后 或者 superBoardSubViewModelList 获取到model数量大于0的时候调用。
     *
     * 注意事项：如需批量删除，请串行执行
     *
     * @param uniqueID ZegoSuperBoardSubView 对象的唯一标识
     */
    destroySuperBoardSubView(uniqueID: string): Promise<void>;
    /**
     * 向服务器查询当前存在的 SuperBoardSubView 列表
     *
     * 支持版本： 2.0.0及以上
     *
     * 详情描述：将当前房间内的白板一次性拉取下来，SDK内部会将关联了文件的白板中的文件也加载下来，这些白板和文件SDK内部会处理对应关系添加到ZegoSuperBoardSubView中，外部只需要使用ZegoSuperBoardView即可。
     *
     * 调用时机：初始化SDK，登录房间之后调用。
     *
     * @return SuperBoardSubView 列表
     */
    querySuperBoardSubViewList(): Promise<ZegoSuperBoardSubViewModel[]>;
    /**
     * 清除文件和白板相关的缓存资源
     *
     * 支持版本： 2.0.0及以上
     *
     * 调用时机：初始化，进入房间之后，SDK 对于房间内资源的清理，需要在退出房间前主动调用
     */
    clearCache(): void;
    /**
     * 设置本端 BoardSubView 延时渲染的时间
     *
     * 支持版本：2.0.0及以上。
     *
     * 详情描述：设置本端 BoardSubView 延时渲染的时间，对端所有 BoardSubView 相关内容同步都会延迟，包括其触发的 ZegoEvent 相关回调事件的执行。
     *
     * 业务场景：如果使用的音视频流是通过 CDN 转推。在房间内，接收端接受音视频流和白板文件流存在一个延迟时间，通过该方法，延迟执行白板相关的同步，即可做到“音画同步”
     *
     * 调用时机：初始化 ZegoSuperboard SDK后。
     *
     * 影响范围：对端所有 BoardSubView 相关内容同步都会延迟，包括其触发的 ZegoEvent 相关回调事件的执行。
     */
    setDeferredRenderingTime(delay: number): void;
    /**
     * 设置是否将缩放同步给房间内其他成员
     *
     * 支持版本：2.0.0及以上。
     *
     * 详情描述：开启之后，可以将本端缩放的发送出去，对端是否要接受，需要对端开启接受缩放。
     *
     * 业务场景：使操作端和接受端的白板缩放同步。
     *
     * 默认值：未调用此接口设置场景时，默认的配置为 false。
     *
     * 调用时机：初始化 ZegSuperboard SDK 之后。
     *
     * 注意事项：如需实现双端缩放同步，需要同时设置 enableSyncScale 和 enableResponseScale
     *
     * 相关回调：对端发生缩放变化，接受端可通过 remoteSuperBoardScaleChanged 监听变化参数。
     */
    enableSyncScale(enable: boolean): void;
    /**
     * 是否响应房间内其他成员的缩放
     *
     * 支持版本：2.0.0及以上。
     *
     * 详情描述：开启之后，可以响应房间内其他成员的缩放，前提是对端将缩放同步给房间内其他成员。
     *
     * 业务场景：使操作端和接受端的白板缩放同步。
     *
     * 默认值：未调用此接口设置场景时，默认的配置为 false。
     *
     * 调用时机：初始化 ZegSuperboard SDK 之后。
     *
     * 注意事项：如需实现双端缩放同步，需要同时设置 enableSyncScale 和 enableResponseScale
     *
     * 相关回调：对端发生缩放变化，接受端可通过 superBoardSubViewScaleChanged 监听变化参数。
     */
    enableResponseScale(enable: boolean): void;
    /**
     * 设置是否开启笔锋
     *
     * 支持版本：2.0.0及以上。
     *
     * 详情描述：设置白板涂鸦是否拥有笔锋效果，设置为 true 则该涂鸦带有笔锋效果。
     *
     * 业务场景：根据涂鸦绘制过程中的速度调整笔画粗细和形状，增强书写体验。
     *
     * 默认值：false。
     *
     * 调用时机/通知时机：初始化 SDK 之后。
     *
     * @param enable 是否开启笔锋
     */
    enableHandwriting(enable: boolean): void;
    /**
     * 设置是否开启本端自定义光标
     *
     * 支持版本：2.2.0及以上。
     *
     * 详情描述：设置白板涂鸦是否使用自定义光标，设置为 true 则光标可设置自定义图片。
     *
     * 是否必填：是。
     *
     * 调用时机：初始化 SDK 之后。
     *
     * @param enable 是否开启自定义光标
     */
    enableCustomCursor(enable: boolean): void;
    /**
     * 设置是否开启显示远端自定义光标
     *
     * 支持版本：2.2.0及以上。
     *
     * 是否必填：是。
     *
     * 调用时机：初始化 SDK 之后。
     *
     * @param enable 是否开启
     */
    enableRemoteCursorVisible(enable: boolean): void;
    /**
     * 设置本端自定义光标的指针图标和指针的热点(即自定义图标的实际点击位置)
     *
     * 支持版本：2.2.0及以上。
     *
     * 是否必填：是。
     *
     * 注意事项：设置指针的热点位置，建议两个小于32的无单位非负数。
     *
     * 平台差异：具体限制和浏览器差异请参考：https://developer.mozilla.org/zh-CN/docs/Web/CSS/cursor#specifications
     *
     * 调用时机：开启本端自定义光标之后。
     *
     * @param type 设置工具类型
     *
     * @param attr 自定义光标相关属性
     */
    setCustomCursorAttribute(type: ZegoSuperBoardTool, attr: ZegoCursorAttribute): Promise<any>;
    /**
     * 设置白板工具类型
     *
     * 支持版本：2.0.0及以上。
     *
     * 详情描述：设置工具类型，使鼠标拥有不同的功能效果。
     *
     * 默认值：默认值 1，默认工具为画笔
     *
     * 调用时机：初始化 ZegSuperBoard SDK 之后。
     *
     * @return 设置是否成功
     */
    setToolType(type: number): boolean;
    /**
     * 支持版本：2.0.0及以上。
     *
     * 详情描述：获取正在使用的白板工具类型
     *
     * 调用时机：初始化 ZegoSuperBoard SDK之后。
     *
     * @return 如果有则返回使用中的工具类型，否则返回 null
     */
    getToolType(): number | null;
    /**
     * 设置文本粗体
     *
     * 支持版本：2.0.0及以上。
     *
     * 详情描述：选择了文字工具类型，调用 setFontBold 设置为 true之后，在白板上新增的文字都是粗体效果。
     *
     * 默认值：false
     *
     * 调用时机：初始化 ZegoSuperBoard SDK 之后。
     *
     * 注意事项：仅设置文本粗体之后新增的文字拥有粗体效果，如之前白板上已存在文字不会更改为粗体效果。
     *
     * @param isBold 是否设置文字粗体
     */
    setFontBold(isBold: boolean): boolean;
    /**
     * 获取文本是否为粗体
     *
     * 支持版本：2.0.0及以上。
     *
     * 详情描述：当前使用工具类型为文本时，调用 isFontBold 可获得是否设置粗体效果。
     *
     * 调用时机：初始化 ZegoSuperBoard SDK 之后。
     *
     * @return 是否是粗体效果
     */
    isFontBold(): boolean;
    /**
     * 设置文本工具的文本是否斜体。
     *
     * 支持版本：2.0.0及以上。
     *
     * 详情描述：设置文本工具的文本是否斜体。
     *
     * 默认值： false
     *
     * 调用时机：初始化 ZegoSuperBoard SDK 之后。
     *
     * 注意事项：仅调用之后新增的文字生效，如之前白板上已存在文字不会更改。
     */
    setFontItalic(isItalic: boolean): boolean;
    /**
     * 获取文字是否为斜体效果
     *
     * 支持版本：2.0.0及以上。
     *
     * 详情描述：当前使用工具类型为文本时，调用 isFontItalic 可获得是否设置斜体效果。
     *
     * 调用时机：初始化 ZegoSuperBoard SDK 之后。
     *
     * @return 返回是否设置斜体
     */
    isFontItalic(): boolean;
    /**
     * 设置文本大小
     *
     * 支持版本：2.0.0及以上。
     *
     * 详情描述：选择了文字工具类型，调用 setFontSize 设置，在白板上新增的文字都是设置之后的大小。
     *
     * 默认值： 24，最大值不得超过 100
     *
     * 调用时机：初始化 ZegoSuperBoard SDK 之后。
     *
     * 注意事项：仅调用 setFontSize 之后新增的文字生效，如之前白板上已存在文字不会更改为字体大小。
     */
    setFontSize(size: number): boolean;
    /**
     * 获取文本大小
     *
     * 支持版本：2.0.0及以上。
     *
     * 详情描述：当前使用工具类型为文本时，调用 getFontSize 可获得当前文本工具的字体大小。
     *
     * 调用时机：初始化 ZegoSuperBoard SDK 之后。
     *
     * @return 字体大小
     */
    getFontSize(): number;
    /**
     * 设置画笔粗细
     *
     * 支持版本：2.0.0及以上。
     *
     * 详情描述：选择了画笔工具类型，调用 setBrushSize 设置数值，在白板上新增的涂鸦粗细即设置的值。
     *
     * 默认值：6
     *
     * 调用时机：初始化 ZegoSuperBoard SDK 之后。
     *
     * 注意事项：仅设置画笔粗细之后新增的涂鸦拥有新的粗细效果，如之前白板上已存在涂鸦不会更改为粗细。
     */
    setBrushSize(size: number): boolean;
    /**
     * 获取画笔粗细
     *
     * 支持版本：2.0.0及以上。
     *
     * 详情描述：当前使用工具类型为文本时，调用 getBrushSize 可获得画笔粗细。
     *
     * 调用时机：初始化 ZegoSuperBoard SDK 之后。
     *
     * @return 画笔粗细
     */
    getBrushSize(): number;
    /**
     * 设置画笔颜色
     *
     * 支持版本：2.0.0及以上。
     *
     * 详情描述：选择了画笔工具类型，调用 setBrushColor 之后，白板上新增的涂鸦颜色生效。
     *
     * 默认值：#f54326
     *
     * 调用时机：初始化 ZegoSuperBoard SDK 之后。
     *
     * 注意事项：仅设置画笔颜色之后新增的涂鸦生效，如之前白板上已存在涂鸦不会更改为颜色。
     *
     * @param color 颜色
     */
    setBrushColor(color: string): boolean;
    /**
     * 获取画笔颜色
     *
     * 支持版本：2.0.0及以上。
     *
     * 详情描述：当前使用工具类型为画笔时，调用 getBrushColor 可获得当前画笔颜色。
     *
     * 调用时机：初始化 ZegoSuperBoard SDK 之后。
     *
     * @return 画笔颜色，16 进制 RGBA
     */
    getBrushColor(): string;
    /**
     * 设置白板背景色
     *
     * 支持版本：2.0.0及以上。
     *
     * 详情描述：选择了文字工具类型，调用 setFontBold 设置为 true之后，在白板上新增的文字都是粗体效果。
     *
     * 默认值：rgb(241, 243, 244)
     *
     * 调用时机：初始化 ZegoSuperBoard SDK 之后。
     *
     * 注意事项：1. 因白板是覆盖在文件上方，设置白板背景颜色会遮挡文件。2. 设置白板背景色之后，房间内全部白板背景色均会生效
     *
     * @param color 背景色，16 进制或者 RGBA
     *
     * @return 设置成功与否
     */
    setWhiteboardBackgroundColor(color: string): boolean;
    /**
     * 获取白板背景色
     *
     * 支持版本：2.0.0及以上。
     *
     * 详情描述：调用 getWhiteboardBackgroundColor 可获得白板背景颜色。
     *
     * 调用时机/通知时机：初始化 ZegoSuperBoard SDK 之后。
     *
     * @return 白板背景色，16 进制或者 RGBA
     */
    getWhiteboardBackgroundColor(): string;
    /**
     * 获取是否开启笔锋效果
     *
     * 支持版本：2.0.0及以上。
     *
     * 详情描述：当前使用工具类型为画笔时，调用 isHandwritingEnabled 可获得是否开启笔锋效果。
     *
     * 调用时机：初始化 ZegoSuperBoard SDK 之后。
     *
     * @return 是否开启笔锋效果
     */
    isHandwritingEnabled(): boolean;
    /**
     * 上传文件到 ZegoDocs 服务
     *
     * 支持版本：2.0.0 及以上。
     *
     * 详情描述：上传过程中，SDK 会根据传入的 [renderType] 对文件进行格式转换，格式转换后文件的渲染模式取决于传入的 [renderType]，可在结果回调中获取上传的进度信息。
     *
     * 业务场景：上传文件到 ZegoDocs 服务。
     *
     * 注意事项：上传阶段会有多次回调，详细请查阅 ZegoSuperBoardUploadFileState 定义
     *
     * 调用时机：初始化 ZegoSuperBoard SDK 之后。
     *
     * @param filePath 需要上传的文件绝对路径，支持 ppt、pdf、xls、jpg、jpeg、png、bmp、txt 等类型的文件，具体参考 [文件规范\|_blank](https://doc-zh.zego.im/zh/11291.html)。
     * @param renderType 上传文件转码后的渲染模式类型，建议设置为 VectorAndIMG，详见 ZegoSuperBoardRenderType。
     * @param listener 上传的进度和结果的回调。上传文件的过程中，会在 [listener] 内收到多次回调，具体请查看 ZegoSuperBoardUploadModel 的介绍
     *
     * @return 返回转码完成的文件 ID
     */
    uploadFile(file: File, renderType: number, listener: Function, uploadOptions: uploadOptions): Promise<string>;
    /**
     * 在上传文件的过程中取消上传动作
     *
     * 支持版本：2.0.0 及以上。
     *
     * 详情描述：执行取消上传文件的操作必须传入对应的 fileHash。
     *
     * 业务场景：在上传文件的过程中需要中断对应文件的上传到ZegoDocs service。
     *
     * 调用时机:  调用uploadFile接口后正在上传文件过程中的时候调用。
     *
     * @param fileHash 调用 uploadFile 时返回的上传 fileHash。
     *
     * @return 操作结果
     */
    cancelUploadFile(fileHash: string): Promise<boolean>;
    /**
     * 上传自定义H5课件到 ZegoDocs 服务
     *
     * 支持版本：2.0.0 及以上。
     *
     * 详情描述：上传过程中，SDK 会根据传入的 [config] 对文件进行格式转换，格式转换后文件的宽高页码以及是否带缩略图取决于传入的 [config]，可在结果回调中获取上传的进度信息。
     *
     * 业务场景：上传自定义H5课件到 ZegoDocs 服务。
     *
     * 调用时机：您需要在初始化成功后调用它。
     *
     * @param filePath 待上传的文件对象
     * @param config 自定义H5课件相关配置信息
     * @param listener 上传的进度的回调。上传文件的过程中，会在 [listener] 内收到多次回调，具体请查看 uploadH5FileCallBack 的介绍。
     *
     * @return 返回上传文件ID
     */
    uploadH5File(file: File, config: any, listener: Function): Promise<string>;
    /**
     * 提前请求文件资源
     *
     * 支持版本：2.0.0 及以上。
     *
     * 详情描述：可以预先请求对应文件的资源。
     *
     * 业务场景：使用场景: 可优化在同一网络下，多台设备同时打开同一个动态 PPT 文件或 H5 文件的速度。
     *
     * 调用时机：在加载文件之前使用。
     *
     * @param fileID 需要提前请求资源的文件 ID
     *
     * @return 预先请求文件资源情况
     */
    cacheFile(fileID: string, listener?: ZegoSuperBoardCacheFileCallBack | undefined): Promise<ZegoSuperBoardDynamicCacheModel | ZegoSuperBoardStaticCacheModel>;
    /**
     *
     * @param seq 缓存操作的序列号。
     * @returns
     */
    cancelCacheFile(seq: number): boolean;
    /**
     * 设置日志等级
     */
    setLogConfig(config: ZegoLogConfig): boolean;
    /**
     *
     * 清除日志资源
     *
     */
    clearLog(): Promise<{
        code: number;
    }>;
    /**
     * 更新 Token
     */
    renewToken(token: string): boolean;
}
/**
 * 详情描述：本类主要实现了切换SuperBoardSubView以及 SuperBoardSubView 中Excel文件sheet的功能，初始化SDK后，可以通过ZegoSuperBoardManager获取到ZegoSuperBoardView对象直接使用，通过该类外界不需要再处理ZegoSuperBoardView的切换同步等逻辑，ZegoSuperBoardView会内部处理这些切换同步展示的逻辑。
 *
 * 业务场景：简化接入SDK的复杂度，不想要处理过多的切换ZegoSuperBoardView的逻辑。
 *
 * 注意事项：要使用ZegoSuperBoardView需要开启enableSuperBoardView 默认是开启的,如果关闭则无法使用,在使用ZegoSuperBoardView模式的情况下不要同时直接使用ZegoSuperBoardSubView。
 *
 */
export interface ZegoSuperBoardView {
    /**
     * 获取当前展示 BoardSubView
     *
     * 支持版本：2.0.0 及以上。
     *
     * 业务场景：如需对当前展示的 BoardSubView 进行翻页操作等，获取当前展示 BoardSubView之后调用 BoardSubView 上的翻页方法。
     *
     * 调用时机：初始化 ZegoSuperBoard SDK 之后。
     *
     * 注意事项：在开启 BoardView 模式下生效
     *
     * @return 当前展示 BoardSubView
     */
    getCurrentSuperBoardSubView(): ZegoSuperBoardSubView | null;
    /**
     * 切换到指定的SuperBoardSubView
     *
     * @param uniqueID SuperBoardSubView的唯一标识
     * @param sheetIndex? 如切换 BoardSubView 是 Excel 文件，需要操作切换指定 Sheet 可传入  sheetIndex
     *
     * @return 操作结果
     */
    switchSuperBoardSubView(uniqueID: string, sheetIndex?: number): Promise<boolean>;
}
/**
 * 详情描述：接口类，用来描述一个纯白板或者文件白板。
 *
 * 业务场景：主要用于对当前展示的白板的操作，设置状态或操作等。
 *
 * 注意事项：需要先登录，使用前请先检查是否为空。
 *
 */
export interface ZegoSuperBoardSubView {
    /**
     * 获取白板对应的 ZegoSuperBoardSubViewModel 数据
     *
     * 支持版本：2.0.0 及以上。
     *
     * 详情描述：获取白板对应的 ZegoSuperBoardSubViewModel 数据 。
     *
     * 业务场景：获取白板对应的model数据 ，比如白板ID、名字、关联的文件ID、当前的缩放系数等。
     *
     * 调用时机：初始化 ZegoSuperBoard SDK 之后。
     *
     * @return 白板对应的 ZegoSuperBoardSubViewModel 数据
     */
    getModel(): ZegoSuperBoardSubViewModel;
    /**
     * 获取总页码数
     *
     * 支持版本：2.0.0及以上。
     *
     * 详情描述：获取总页码数。
     *
     * 调用时机：
     * 使用ZegoSuperBoardView时，当  currentSuperBoardSubView 存在的时候即可调用。
     * 不使用ZegoSuperBoardView时，当 superBoardSubViewModelList 存在superBoardSubViewModel的时候即可调用。
     *
     * @return 总页码数
     */
    getPageCount(): number;
    /**
     * 获取当前显示的内容的页码
     *
     * 支持版本：2.0.0及以上。
     *
     * 详情描述：获取当前显示的内容的页码。
     *
     * 调用时机：
     * 使用 ZegoSuperBoardView 时，当 currentSuperBoardSubView 存在的时候即可调用。
     * 不使用 ZegoSuperBoardView 时，当 superBoardSubViewModelList 存在 SuperBoardSubViewModel 的时候即可调用 。
     *
     * @return 当前显示的内容的页码
     */
    getCurrentPage(): number;
    /**
     * 获取动态 PPT 当前页码的动画步骤，从1开始
     *
     * 支持版本：2.0.0 及以上。
     *
     * 调用时机：初始化 ZegoSuperBoard SDK 之后。
     *
     * 使用限制：仅动态 PPT 才可调用
     *
     * @return 当前页码的动画步骤
     */
    getCurrentStep(): number;
    /**
     * 获取可见区域的大小
     *
     * 支持版本：2.0.0及以上。
     *
     * 详情描述：获取文件可见区域的大小，比如用1000x1000的大小去加载一张64x64的图片，此时可见区域的大小是64x64。
     *
     * 注意事项：如果不是文件白板，会返回0。
     *
     * 调用时机：当 currentSuperBoardSubView 存在的时候即可调用。
     *
     * @return 可见区域的大小
     */
    getVisibleSize(): Size;
    /**
     * 跳转到指定页面
     *
     * 支持版本：2.0.0及以上。
     *
     * 详情描述：跳转到指定页面。
     *
     * 业务场景：指定一个页码进行跳转。
     *
     * 注意事项：如果是动态ppt或者H5文件，跳转页面可能需要下载图片，动画资源，因此频繁调用可能会导致需要很久才执行完。
     *
     * 相关回调：superBoarSubViewScrollChanged。
     *
     * 相关接口：flipToPrePage，flipToNextPage。
     *
     * 调用时机：当  currentSuperBoardSubView 存在的时候即可调用  。
     *
     * @param targetPage 目标页的页码，从1开始
     */
    flipToPage(page: number): boolean;
    /**
     * 跳转到上一页
     *
     * 支持版本：2.0.0及以上。
     *
     * 详情描述：跳转到上一页。
     *
     * 注意事项：如果是动态 ppt 或者 H5 文件，跳转页面可能需要下载图片，动画资源，因此频繁调用可能会导致需要很久才执行完。
     *
     * 相关回调：superBoardSubViewScrollChanged。
     *
     * 相关接口：flipToPage，flipToNextPage。
     *
     * 调用时机：当  currentSuperBoardSubView 存在的时候即可调用。
     */
    flipToPrePage(): boolean;
    /**
     * 跳转到下一页
     *
     * 支持版本：2.0.0及以上。
     *
     * 详情描述：跳转到下一页。
     *
     * 注意事项：如果是动态 ppt 或者 H5 文件，跳转页面可能需要下载图片，动画资源，因此频繁调用可能会导致需要很久才执行完。
     *
     * 相关回调：superBoardSubViewScrollChanged。
     *
     * 相关接口：flipToPage，flipToPrePage。
     *
     * 调用时机：当  currentSuperBoardSubView 存在的时候即可调用。
     */
    flipToNextPage(): boolean;
    /**
     * 切换扬声器设备
     *
     * 支持版本：2.9.0及以上。
     *
     * 详情描述：切换扬声器设备。
     *
     * 注意事项：仅支持动态演示文件扬声器设备切换。
     *
     * 调用时机：当  currentSuperBoardSubView 存在的时候即可调用。
     *
     * @param label 扬声器设备信息的 label 值
     */
    switchSpeaker(label: string): Promise<{
        code: number;
        message?: string;
    } | boolean>;
    /**
     * 跳转到上一步动画
     *
     * 支持版本：2.0.0及以上。
     *
     * 详情描述：跳转到上一步动画。
     *
     * 注意事项：仅仅针对动态ppt或者H5文件，否则不会有任何效果。
     *
     * 相关接口：nextStep。
     *
     * 调用时机：当 currentSuperBoardSubView 存在的时候即可调用。
     */
    preStep(): void;
    /**
     * 跳转到下一步动画
     *
     * 支持版本：2.0.0及以上。
     *
     * 详情描述：跳转到下一步动画。
     *
     * 注意事项：仅仅针对动态ppt或者H5文件，否则不会有任何效果。
     *
     * 相关接口：preStep。
     *
     * 调用时机:当  currentSuperBoardSubView 存在的时候即可调用。
     */
    nextStep(): void;
    /**
     * 向白板添加自定义文本
     *
     * 支持版本：2.0.0 及以上。
     *
     * 详情描述：在白板view中添加文本,可以指定添加的位置。
     *
     * 业务场景：在 SubView 指定位置添加文本，会创建一个新的文本图元。
     *
     * 调用时机：当  currentSuperBoardSubView 存在的时候即可调用。
     *
     * @param text 待添加文本图元的字符串内容
     * @param positionX 相对所在viewport的左上角的横向偏移，如10，此处的viewport是指可写区域
     * @param positionY 相对所在viewport的左上角的纵向偏移，如10，此处的viewport是指可写区域
     */
    addText(text: string, positionX: number, positionY: number): void;
    /**
     * 插入图片到白板
     *
     * 支持版本：2.0.0及以上。
     *
     * 详情描述：插入图片到白板,直接插入到白板显示或者设置自定义图形。
     *
     * 业务场景：设置自定义图形后，在选择白板工具为自定义图形时，触摸白板会绘制此处传入的自定义图形
     *
     * 注意事项：支持的图片类型：png/jpg/jpeg，当type为Graphic时，支持本地图片和网络图片，图片大小限制10M，当type为Custom时，只支持网络图片，图片大小限制500KB。
     *
     * 调用时机：当 currentSuperBoardSubView 存在的时候即可调用。
     *
     * @param type  图片类型，目前支持普通图片和自定义图形
     * @param address 图片地址，支持本地图片地址和网络图片地址，本地图片会先上传到cdn存储。目前自定义图形只支持网络图片地址。（网络图片仅支持 https）例："xxxxxxxxxx.png"，"https://xxxxxxxx.com/xxx.png"。
     * @param positionX 图片插入位置的起始点，相对所在viewport的左上角的横向偏移，如10，此处的viewport是指可写区域。自定义图形直接传 0 即可。
     * @param positionY 图片插入位置的起始点，相对所在viewport的左上角的纵向偏移，如10，此处的viewport是指可写区域。自定义图形直接传 0 即可。
     */
    addImage(type: ZegoSuperBoardViewImageType, positionX: number, positionY: number, address: File | string | {
        path: string;
    }, listener: Function): Promise<string>;
    /**
     * 向白板设置背景图
     *
     * 支持版本：2.0.0及以上。
     *
     * 详情描述：向白板设置背景图，支持本地路径或者网络路径，这个背景图会同步给房间内的其他用户。
     *
     * 调用时机：获取到SuperBoardSubView列表之后。
     *
     * @param address 背景图片路径, 本地路径或者网络路径均可（网络图片仅支持 https）例："xxxxxxxxxx.png"，"https://xxxxxxxx.com/xxx.png"。
     * @param mode 背景图片填充模式
     */
    setBackgroundImage(address: File | string | {
        path: string;
    }, mode: ZegoSuperBoardViewImageFitMode, listener: Function): Promise<string>;
    /**
     * 清除白板的背景图
     *
     * 支持版本：2.0.0及以上。
     *
     * 详情描述：清除白板的背景图，这个动作会同步给房间内的其他用户。
     *
     * 调用时机：获取到SuperBoardSubView列表之后。
     */
    clearBackgroundImage(): void;
    /**
     * 清除白板所有页的图元
     *
     * 支持版本：2.0.0及以上。
     *
     * 详情描述：清除白板所有页的图元。
     *
     * 业务场景：白板相关操作。
     *
     * 相关接口：clearCurrentPage。
     *
     * 调用时机：当 currentSuperBoardSubView 存在的时候即可调用。
     */
    clearAllPage(): Promise<boolean>;
    /**
     * 清除白板当前页的图元
     *
     * 支持版本： 2.0.0及以上
     *
     * 详情描述：清除白板当前页的图元。
     *
     * 业务场景：白板相关操作。
     *
     * 相关接口：clearAllPage。
     *
     * 调用时机：当 currentSuperBoardSubView 存在的时候即可调用。
     */
    clearCurrentPage(): void;
    /**
     * 删除选中的图元
     *
     * 支持版本：2.0.0及以上。
     *
     * 详情描述：通过白板的选择工具选择一些图元，调用这个方法可以删除选中的图元。
     *
     */
    clearSelected(): void;
    /**
     * 撤销白板的上一步操作
     *
     * 支持版本：2.0.0 及以上。
     *
     * 详情描述：撤销白板的上一步操作。
     *
     * 业务场景：白板的相关操作。
     *
     * 相关接口：redo。
     *
     * 调用时机：当 currentSuperBoardSubView 存在的时候即可调用。
     */
    undo(): void;
    /**
     * 恢复白板上一步撤销的操作
     *
     * 支持版本：2.0.0 及以上。
     *
     * 详情描述：恢复白板上一步撤销的操作。
     *
     * 业务场景：白板的相关操作。
     *
     * 相关接口：undo。
     *
     * 调用时机：当 currentSuperBoardSubView 存在的时候即可调用。
     */
    redo(): void;
    /**
     * 缩放 BoardSubView
     *
     * 支持版本：2.0.0 及以上。
     *
     * 详情描述：对 BoardSubView 进行缩放。
     *
     * 默认值：1
     *
     * 调用时机：初始化 ZegoSuperBoard SDK 之后。
     *
     * 使用限制：设置的缩放系数不得小于 1
     *
     * 注意事项：需要白板已经挂载之后，设置才生效。
     *
     * 相关回调：superBoardSubViewScaleChanged 监听远端缩放
     */
    setScaleFactor(scaleFactor: number, scaleOffsetX?: number, scaleOffsetY?: number): void;
    /**
     * 获取当前 BoardSubView 的缩放信息
     *
     * 支持版本：2.0.0 及以上。
     *
     * 详情描述：当前 BoardSubView 进行缩放后， 获取当前 BoardSubView 的缩放相关信息。
     *
     * 调用时机：初始化 ZegoSuperBoard SDK ，对 BoardSubView 进行缩放后。
     *
     * @return 当前缩放信息
     */
    getScaleFactor(): {
        scaleFactor: number;
        scaleOffsetX: number;
        scaleOffsetY: number;
    };
    /**
     * 设置当前白板的操作模式
     *
     * 支持版本：2.0.0及以上。
     *
     * 详情描述：设置当前白板的操作模式,比如禁止客户端对白板的手势操作。
     *
     * 业务场景：设置toolType的时候，需要调用这个方法来对白板进行处理。如果需要禁止客户端对白板的手势操作，可以使用这个方法设置成None模式。如果要滚动文件，则设置成滚动模式，其他的白板工具，则设置成绘制模式
     *
     * 默认值：绘制/缩放模式
     *
     * 影响范围：设置为滚动模式的时候，此时手势会被识别为滚动，设置为绘制模式的时候，此时手势会被识别为绘制相关的操作。
     *
     * 调用时机：当 currentSuperBoardSubView 存在的时候即可调用。
     *
     * @param mode 操作模式
     */
    setOperationMode(mode: ZegoSuperBoardOperationMode): void;
    /**
     * 获取当前白板快照
     *
     * 支持版本：2.0.0及以上。
     *
     * 详情描述：将当前白板view可视区内所有内容保存在图片中。
     *
     * @param customData? 非必填，对象中的userData是透传参数，可用作截图数据的命名，或者多张截图数据的唯一标记。
     */
    snapshot(customData?: {
        userData: string;
    }): Promise<{
        image: string;
        userData?: string;
    }>;
    /**
     * 重新加载 SubView
     *
     * 支持版本：2.0.0及以上。
     *
     * 详情描述：动态修改挂载父容器大小时可以使用该方法重新加载 SubView
     *
     * 调用时机：初始化 ZegoSuperBoard SDK 之后。
     *
     * 使用限制：每次调用该接口 ，整个 SubView 内容会重新绘制，位置会实时自适应。会为了提高交互体验，可限频调用。
     */
    reloadView(options?: ReloadOptions): void;
    /**
     * 获取当前展示的sheet名称
     *
     * 支持版本：2.0.0及以上。
     *
     * 详情描述：获取当前展示的sheet名称,如果不是excel，则返回null。
     *
     * 调用时机：当 currentSuperBoardSubView 存在的时候即可调用。
     *
     * @return 当前展示的sheet名称
     */
    getCurrentSheetName(): string;
    /**
     * 获取 Excel 的 Sheet 名字列表
     *
     * 支持版本：2.0.0 及以上。
     *
     * 详情描述：获取这个excel文件的所有sheet表的名字。
     *
     * 业务场景：需要展示excel文件的sheet表的时候，通过这个方法获取这个excel文件的所有sheet表的名字。
     *
     * 注意事项：对于非excel的文件类型返回一个空的列表。
     *
     * 调用时机：createFile 成功之后或者拉取列表成功。
     *
     * @return  Excel 文件的 Sheet 名字列表
     */
    getExcelSheetNameList(): string[];
    /**
     * 获取当前文件的缩略图列表，仅支持 PDF 、PPT、动态 PPT 、H5文件格式
     *
     * 支持版本：2.0.0 及以上。
     *
     * 详情描述：如果需要展示文件的预览画面，可以通过这个接口来获取对应的预览图片，然后通过点击预览图片进行翻页。
     *
     * 业务场景：展示文件每一页的预览画面。
     *
     * 调用时机：在文件加载后调用，否则返回一个空列表。
     *
     * 使用限制：仅支持 PDF 、PPT、动态 PPT 、H5文件格式,其他类型返回一个空的列表。
     *
     * @return 文件每一页的缩略图的URL地址列表
     */
    getThumbnailUrlList(): string[];
    /**
     * 获取 PPT 指定页码的备注
     *
     * 支持版本：2.0.0 及以上。
     *
     * 详情描述：获取 PPT 指定页码的备注。
     *
     * 业务场景：获取 PPT 指定页码的备注。
     *
     * 使用限制：仅支持PPT、动态 PPT 文件格式,其他类型返回null。
     *
     * 调用时机：loadFile 成功之后。
     *
     * @param page 指定的页码，从1开始
     *
     * @return 该页备注，若没有备注，则返回空字符串
     */
    getPPTNotes(page: number): string;
    /**
     * 停止当前动态ppt页面正在播放的视频
     *
     * 支持版本：2.0.0及以上。
     *
     * 详情描述：停止当前动态ppt页面正在播放的视频,一般用于切换文件时，停止掉动态 PPT 文件的音视频播放。
     *
     * 调用时机：在文件加载成功之后,播放音视频的过程中调用。
     */
    stopPlayPPTVideo(page: number): void;
}
/**
 * ZegoSuperBoard SDK  回调事件集合
 *
 */
export interface ZegoEvent {
    /**
     * 详情描述：监听所有 error 错误
     */
    error: errorCallback;
    /**
     * 详情描述：监听对端创建 subView ，返回对端创建的 subView 的 uniqueID
     *
     * 通知时机：创建成功 subView 后，已在同一房间内其他用户会在 [remoteSuperBoardSubViewAdded] 回调中收到相应通知。
     */
    remoteSuperBoardSubViewAdded: remoteSuperBoardSubViewAddedCallback;
    /**
     * 详情描述：监听对端删除 subView ，返回对端删除的 subView 的 uniqueID。
     *
     * 通知时机：删除 subView 成功后，已在同一房间内其他用户会在 [remoteSuperBoardSubViewRemoved] 回调中收到相应通知。
     */
    remoteSuperBoardSubViewRemoved: remoteSuperBoardSubViewRemovedCallback;
    /**
     * 详情描述：监听对端切换 subView ，返回对端切换的 subView 的 uniqueID。
     *
     * 通知时机：切换 subView 成功后，已在同一房间内其他用户会在 [remoteSuperBoardSubViewSwitched] 回调中收到相应通知。
     */
    remoteSuperBoardSubViewSwitched: remoteSuperBoardSubViewSwitchedCallback;
    /**
     * 详情描述：监听对端切换 Excel 中某个 sheet ，返回对端切换的 Excel 的 uniqueID 和 sheetIndex。
     *
     * 通知时机：切换 Excel 中某个 sheet 成功后，已在同一房间内其他用户会在 [remoteSuperBoardSubViewExcelSwitched] 回调中收到相应通知。
     */
    remoteSuperBoardSubViewExcelSwitched: remoteSuperBoardSubViewExcelSwitchedCallback;
    /**
     * 详情描述：监听白板权限变更，[缩放、滚动]权限对象
     *
     * 通知时机：权限变更发生，已在同一房间内用户会在 [remoteSuperBoardAuthChanged] 回调中收到相应通知。
     */
    remoteSuperBoardAuthChanged: remoteSuperBoardAuthChangedCallback;
    /**
     * 详情描述：监听图元权限变更，[创建、擦除、移动、编辑、清空]权限对象
     *
     * 通知时机：权限变更发生，已在同一房间内用户会在 [remoteSuperBoardGraphicAuthChanged] 回调中收到相应通知。
     */
    remoteSuperBoardGraphicAuthChanged: remoteSuperBoardGraphicAuthChangedCallback;
    /**
     * 详情描述：监听缩放 subView ，返回缩放的 subView 的 uniqueID 和 缩放系数。
     *
     * 通知时机：缩放 subView 成功后，在同一房间全部用户会在 [superBoardSubViewScaleChanged] 回调中收到相应通知。
     */
    superBoardSubViewScaleChanged: superBoardSubViewScaleChangedCallback;
    /**
     * 详情描述：监听滚动/翻页 subView ，返回滚动/翻页的 subView 的 uniqueID 和页码。
     *
     * 通知时机：滚动/翻页 subView 成功后，在同一房间全部用户会在 [superBoardSubViewScrollChanged] 回调中收到相应通知。
     */
    superBoardSubViewScrollChanged: superBoardSubViewScrollChangedCallback;
}
/**
 * reloadview 配置项
 */
export interface ReloadOptions {
    forceReload: boolean;
    reloadType: reloadType;
}
export declare enum reloadType {
    CURRENT = 1,
    ALL = 2
}
/**
 * 监听所有 error 错误
 *
 * @param error 错误信息
 */
declare type errorCallback = (error: ZegoSuperBoardErrorData) => void;
/**
 * 返回白板权限变更对象
 *
 * @param data 返回白板权限变更对象
 *
 * 注意事项：{ scale:0, scroll:1 }
 */
declare type remoteSuperBoardAuthChangedCallback = (data: Record<string, number>) => void;
/**
 * 返回图元权限变更对象
 *
 * @param data 返回图元权限变更变更对象
 *
 *  注意事项：{ create:1, delete:1, move:1, update:1, clear:0 }
 */
declare type remoteSuperBoardGraphicAuthChangedCallback = (data: Record<string, number>) => void;
/**
 * 监听对端创建 subView ，返回对端创建的 subView 的 uniqueID
 *
 * @param uniqueID 对端创建的 subView 的 uniqueID
 */
declare type remoteSuperBoardSubViewAddedCallback = (uniqueID: string) => void;
/**
 * 返回对端切换的 Excel 的 uniqueID 和 Sheet 的 sheetIndex
 *
 * @param uniqueID 对端切换的 Excel 的 uniqueID
 * @param sheetIndex 对端切换的 Sheet 的 sheetIndex
 */
declare type remoteSuperBoardSubViewExcelSwitchedCallback = (uniqueID: string, sheetIndex: number) => void;
/**
 * 返回对端删除的 subView 的 uniqueID
 *
 * @param uniqueID 对端删除的 subView 的 uniqueID
 */
declare type remoteSuperBoardSubViewRemovedCallback = (uniqueID: string) => void;
/**
 * 返回对端切换的 subView 的 uniqueID
 *
 * @param uniqueID 对端切换的 subView 的 uniqueID
 */
declare type remoteSuperBoardSubViewSwitchedCallback = (uniqueID: string) => void;
/**
 * 返回缩放的 subView 的 uniqueID 和 scale
 *
 * @param uniqueID 缩放的 subView 的 uniqueID
 */
declare type superBoardSubViewScaleChangedCallback = (uniqueID: string, scale: number) => void;
/**
 * 返回滚动/翻页的 subView 的 uniqueID
 *
 * @param uniqueID 滚动/翻页的 subView 的 uniqueID ,页码, 动态 PPT 类型的文件的步数
 */
declare type superBoardSubViewScrollChangedCallback = (uniqueID: string, page: number, step: number) => void;
/**
 * 预加载文件回调
 *
 * @param data 回调参数
 */
export declare type ZegoSuperBoardCacheFileCallBack = (data: ZegoSuperBoardStaticCacheModel) => void;
/**
 * 错误回调
 *
 */
export interface ZegoSuperBoardErrorData {
    /**
     * 错误码
     */
    code: ZegoSuperBoardError;
    /**
     * 错误信息
     */
    message: string;
}
/**
 * 详情描述：接口参数构造类，用构造初始化SDK所需要的参数。
 *
 * 业务场景：调用初始化SDK接口 initWithConfig 时需要传入。
 *
 */
export interface ZegoSuperBoardInitConfig {
    /**
     * 详情描述：ZEGO 为开发者签发的应用 ID，请从 ZEGO 管理控制台申请。
     *
     * 是否必填：必填
     *
     * 取指范围: 0 - 4294967295。
     */
    appID: number;
    /**
     * 请勿在此字段填写用户敏感信息，包括但不限于手机号、身份证号、护照编号、真实姓名等。
     */
    userID: string;
    /**
     * 登录验证 token，是通过在即构控制台注册项目获得密钥，加上指定算法获得。测试阶段可以通过 ZEGO 提供的接口获取，正式环境一定要用户自己实现。
     */
    token: string;
    /**
     * 是否在测试环境执行，该值默认为 false(正式环境)。
     * 不同环境下的文件和白板不能互通。
     * 请先在测试环境调试，联系 ZEGO 技术支持在正式环境上线。
     */
    isTestEnv: boolean;
    /**
     * 详情描述：展示 subView 的目标视图父容器 ID
     *
     * 是否必填：是
     *
     * 注意事项：在添加 subView 到视图中必须确认父容器定位方式需为相对定位且物理尺寸不为 0
     */
    parentDomID: string;
}
/**
 * 详情描述：接口参数构造类，用传入创建白板所需要的参数。
 *
 * 业务场景：在调用 createWhiteboardView 接口是需要传入。
 *
 */
export interface ZegoCreateWhiteboardConfig {
    /**
     * 支持版本：v2.0.0。
     *
     * 详情描述：创建白板是需要设置的白板名称。
     *
     * 是否必填：必填
     *
     * 注意事项：限制长度为 128 字节，支持中英文。
     */
    name: string;
    /**
     * 支持版本：v2.0.0。
     *
     * 详情描述：每页白板的宽度。
     *
     * 是否必填：必填
     *
     * 取值范围：大于 0 的正整数。
     */
    perPageWidth: number;
    /**
     * 支持版本：v2.0.0。
     *
     * 详情描述：每页白板的高度。
     *
     * 是否必填：必填
     *
     * 取值范围：大于 0 的正整数。
     */
    perPageHeight: number;
    /**
     * 支持版本：v2.0.0。
     *
     * 详情描述：总页数。
     *
     * 是否必填：必填。
     *
     * 取值范围：大于0。
     */
    pageCount: number;
}
/**
 * 详情描述：接口参数构造类，用传入创建文件所需要的参数。
 *
 * 业务场景：在调用[createFileView]接口时需要传入。
 *
 */
export interface ZegoCreateFileConfig {
    /**
     * 支持版本：v2.0.0
     *
     * 详情描述：文件对应的ID
     *
     * 是否必填：必填
     */
    fileID: string;
}
/**
 * 详情描述：数据模型类，里面包含了创建的ZegoSuperBoardSubView的名称、创建时间、包含的文件ID、文件类型以及ZegoSuperBoardSubView 对象的唯一标识。
 *
 * 业务场景：主要用户获取对应ZegoSuperBoardSubView对象的名称和文件信息。
 *
 */
export interface ZegoSuperBoardSubViewModel {
    /**
     * SuperBoardSubView 对应的名称
     */
    name: string;
    /**
     * 白板创建时间
     * Unix 时间戳(毫秒)
     */
    createTime: number;
    /**
     * 文件ID，此 ID 唯一
     * 重要提示: 文件转码成功后获取的 ID
     */
    fileID: string;
    /**
     * 文件类型，参考 ZegoDocsView SDK 定义的文件类型
     */
    fileType: ZegoSuperBoardFileType;
    /**
     * SuperBoardSubview的ID 此ID唯一
     */
    uniqueID: string;
    whiteboardIDList: string[];
}
/**
 * 白板工具类型定义
 *
 */
export declare enum ZegoSuperBoardTool {
    /**
     * 没有设置工具
     */
    None = 0,
    /**
     * 画笔工具，设置后绘制线条
     */
    Pen = 1,
    /**
     * 文本工具
     */
    Text = 2,
    /**
     * 直线工具，设置后绘制直线
     */
    Line = 4,
    /**
     * 矩形工具，设置后绘制空心矩形
     */
    Rect = 8,
    /**
     * 椭圆工具，设置后绘制椭圆
     */
    Ellipse = 16,
    /**
     * 选择工具，设置后可以选中图元进行操作，比如移动
     */
    Selector = 32,
    /**
     * 擦除工具，设置后点击图元进行擦除
     */
    Eraser = 64,
    /**
     * 激光笔工具,设置后显示激光笔轨迹
     */
    Laser = 128,
    /**
     * 点击工具，主要用于点击动态ppt和H5文件的内容
     */
    Click = 256,
    /**
     * 自定义图形，设置此类型后，在白板上绘制会绘制出addImage接口传入的自定义图形
     */
    CustomImage = 512
}
/**
 * 操作模式
 */
export declare enum ZegoSuperBoardOperationMode {
    /**
     * 不可操作模式，如果与其他模式混合，则依然是不可操作模式
     */
    None = 1,
    /**
     * 绘制模式，此模式下将会响应图元绘制操作，并同步图元到其他端，无法滚动，不可以与 Scroll 混合使用
     */
    Draw = 4,
    /**
     * 滚动模式，此模式下可以进行滚动翻页，并同步到其他端，此时将无法响应手动绘制操作,不可以与 Draw 混合使用
     */
    Scroll = 2,
    /**
     * 放缩模式，此模式下可以对 subView 内容进行放大
     */
    Zoom = 8
}
/**
 * 白板插入图片的时候，插入的类型
 *
 * 详情描述：白板插入图片的时候，插入的类型，目前支持普通图片和自定义图形。
 *
 * 注意事项：支持的图片类型：png/jpg/jpeg，当type为Graphic时，支持本地图片和网络图片，图片大小限制10M，当type为Custom时，只支持网络图片，图片大小限制500KB。
 *
 */
export declare enum ZegoSuperBoardViewImageType {
    /**
     * 普通图片图元类型
     */
    Graphic = 0,
    /**
     * 自定义图片图元类型
     */
    Custom = 1
}
/**
 * 白板插入背景图片的时候，背景图片的对齐方式
 *
 */
export declare enum ZegoSuperBoardViewImageFitMode {
    /**
     * 左对齐
     */
    Left = 0,
    /**
     * 右对齐
     */
    Right = 1,
    /**
     * 下对齐
     */
    Bottom = 2,
    /**
     * 上对齐
     */
    Top = 3,
    /**
     * 居中对齐
     */
    Center = 4
}
/**
 * 自定义配置
 *
 */
export declare enum ZegoSuperboardCustomConfigKey {
    /**
     * 是否禁用动态PPT里图片的复制和拖拽效果
     *
     * 注意事项： value 取值：false 默认模式，不禁用。true 禁用
     *
     * 使用示例：setCustomizedConfig('disableH5ImageDrag', 'true')
     */
    DisableH5ImageDrag = "disableH5ImageDrag",
    /**
     * 动态PPT步数切页模式
     *
     * value 取值如下：
     *
     * Note: 1 默认模式，正常上一步和下一步
     *
     * Note: 2 在页中的第一步执行上一步时，不跳转，页中的最后一步执行下一步时，不跳转。
     *
     * 使用示例：setCustomizedConfig('pptStepMode', '2')
     */
    PptStepMode = "pptStepMode",
    /**
     * 设置私有化域名
     *
     * 使用示例：setCustomizedConfig('domain', 'https://www.zego.im/')
     */
    Domain = "domain",
    /**
     * 设置缩略图清晰度模式
     *
     * value 取值如下：
     *
     * Note: 1 普通，默认模式
     *
     * Note: 2 标清
     *
     * Note: 3 高清
     *
     * 使用示例：setCustomizedConfig('thumbnailMode', '1')
     *
     * 注意事项：设置此项，需要重新上传文件进行转码生效。
     */
    ThumbnailMode = "thumbnailMode",
    /**
     * 是否禁用动态 PPT 中的鼠标事件
     *
     * 注意事项： value 取值：false 默认模式，不禁用。true 禁用
     *
     * 使用示例：setCustomizedConfig('disableH5Mouse', 'true')
     */
    DisableH5Mouse = "disableH5Mouse",
    /**
     * 是否开启图片体积优化
     *
     * 注意事项： value 取值：false 默认模式，不开启。true 开启
     *
     * 使用示例：setCustomizedConfig('enableSizeReducedImages', true)
     */
    EnableSizeReducedImages = "enableSizeReducedImages"
}
/**
 * 文件类型定义
 *
 */
export declare enum ZegoSuperBoardFileType {
    /**
     * 未知类型
     */
    Unknown = 0,
    /**
     * 没有动画的PowerPoint文档
     */
    PPT = 1,
    /**
     * Word文档
     */
    DOC = 2,
    /**
     * Excel文档
     */
    ELS = 4,
    /**
     * PDF文档
     */
    PDF = 8,
    /**
     * 图片（jpg、jpeg、png、bmp）
     */
    IMG = 16,
    /**
     * 文本文件
     */
    TXT = 32,
    /**
     * 动态PPT（pptx、ppt）
     */
    DynamicPPTH5 = 512,
    /**
     * H5文件
     */
    CustomH5 = 4096
}
/**
 * 文件上传的状态
 *
 */
export declare enum ZegoSuperBoardUploadFileState {
    /**
     * 上传中
     */
    UPLOADING = 1,
    /**
     * 已上传
     */
    UPLOADED = 2,
    /**
     * 排队中
     */
    WAITING = 4,
    /**
     * 转换中
     */
    CONVERTING = 8,
    /**
     * 转换成功
     */
    CONVERTED = 16,
    /**
     * 转换失败
     */
    CONVERTFAIL = 32,
    /**
     * 取消上传
     */
    CONVERTCANCEL = 64
}
/**
 * 渲染模式类型
 *
 */
export declare enum ZegoSuperBoardRenderType {
    /**
     * Vector 向量模式，适用于文件共享 SDK PC 端、移动端做的文档智能转换，能够更换地支持文档浏览以及更清晰的缩放。
     */
    Vector = 1,
    /**
     * IMG 图片模式，适用于文件共享SDK Web端、小程序使用的文档转换，按文件样式每一页都生成图片样式。
     */
    IMG = 2,
    /**
     * VectorAndIMG 向量和图片模式， 适用于当存在Web端、小程序、移动端、PC端，多端的并存情况，在web端、小程序将使用IMG图片模式， 而PC端、移动端将使用Vector向量模式。推荐使用该模式
     */
    VectorAndIMG = 3,
    /**
     * DynamicPPTH5 动态ppt模式， 适用于文件共享SDK PC端、移动端、Web端、小程序使用的PPT文件转码格式， 会将PPT文件转成动态ppt的H5文件。
     */
    DynamicPPTH5 = 6,
    /**
     * h5文件
     */
    CustomH5 = 7
}
/**
 * 自定义 H5 课件配置
 *
 */
export interface ZegoSuperboardCustomH5Config {
    /**
     * 描述详情: 自定义H5课件的宽
     *
     * 是否必填：必填
     *
     * 取值范围：大于0
     *
     * 支持版本：v2.0.0
     */
    width: number;
    /**
     * 描述详情: 自定义H5课件的高
     *
     * 是否必填：必填
     *
     * 取值范围：大于0
     *
     * 支持版本：v2.0.0
     */
    height: number;
    /**
     * 描述详情: 自定义H5课件的页数。
     *
     * 是否必填：必填
     *
     * 取值范围：大于0
     *
     * 支持版本：v2.0.0
     */
    pageCount: number;
    /**
     * 描述详情:  自定义H5课件缩略图相对路径数组。
     *
     * 是否必选：可选参数
     *
     * 支持版本：v2.0.0
     */
    thumbnailList?: string[];
}
export interface ZegoCursorAttribute {
    iconPath: string | File;
    offsetX: number;
    offsetY: number;
}
/**
 * SuperBoard错误码枚举
 *
 * 详情描述：SDK使用过程中的异常错误码。
 *
 */
export declare enum ZegoSuperBoardError {
    /**
     * 成功
     */
    ZegoSuperBoardSuccess = 0,
    /**
     * 内部错误码
     */
    ZegoSuperBoardErrorInternal = 3100001,
    /**
     * 参数错误，请留意控制台输出的具体信息
     */
    ZegoSuperBoardErrorParamInvalid = 3100002,
    /**
     * 网络超时
     */
    ZegoSuperBoardErrorNetworkTimeout = 3100003,
    /**
     * 网络断开
     */
    ZegoSuperBoardErrorNetworkDisconnect = 3100004,
    /**
     * 网络回包错误
     */
    ZegoSuperBoardErrorResponse = 3100005,
    /**
     * 请求过于频繁
     */
    ZegoSuperBoardErrorRequestTooFrequent = 3100006,
    /**
     * 初始化失败，请使用与白板匹配版本的 ZegoExpress-Video SDK。
     */
    ZegoSuperBoardErrorVersionMismatch = 3100007,
    /**
     * 日志目录无法创建或写入
     */
    ZegoSuperBoardErrorLogFolderNotAccess = 3140010,
    /**
     * 缓存目录无法创建或写入
     */
    ZegoSuperBoardErrorCacheFolderNotAccess = 3140011,
    /**
     * 未登录房间
     */
    ZegoSuperBoardErrorNoLoginRoom = 3110001,
    /**
     * 用户不存在
     */
    ZegoSuperBoardErrorUserNotExist = 3110002,
    /**
     * 	白板 view 不存在
     */
    ZegoSuperBoardErrorViewNotExist = 3120001,
    /**
     * 创建白板 view 失败
     */
    ZegoSuperBoardErrorViewCreateFail = 3120002,
    /**
     * 修改白板 view 失败
     */
    ZegoSuperBoardErrorViewModifyFail = 3120003,
    /**
     * 白板 view 名称过长
     */
    ZegoSuperBoardErrorViewNameLimit = 3120004,
    /**
     * 白板 view 的 parent 不存在
     */
    ZegoSuperBoardErrorViewParentNotExist = 3120005,
    /**
     * 超过白板最大数量限制
     */
    ZegoSuperBoardErrorViewNumLimit = 3120006,
    /**
     * 动画信息过长
     */
    ZegoSuperBoardErrorAnimationInfoLimit = 3120007,
    /**
     * 图元不存在
     */
    ZegoSuperBoardErrorGraphicNotExist = 3130001,
    /**
     * 创建图元错误
     */
    ZegoSuperBoardErrorGraphicCreateFail = 3130002,
    /**
     * 修改图元错误
     */
    ZegoSuperBoardErrorGraphicModifyFail = 3130003,
    /**
     * 未开启绘制
     */
    ZegoSuperBoardErrorGraphicUnableDraw = 3130004,
    /**
     * 单个图元数据大小超过限制
     */
    ZegoSuperBoardErrorGraphicDataLimit = 3130005,
    /**
     * 超过图元最大数量限制
     */
    ZegoSuperBoardErrorGraphicNumLimit = 3130006,
    /**
     * 文本字数超过上限
     */
    ZegoSuperBoardErrorGraphicTextLimit = 3130007,
    /**
     * 图片图元大小超限制
     */
    ZegoSuperBoardErrorGraphicImageSizeLimit = 3130008,
    /**
     * 不支持的图片类型
     */
    ZegoSuperBoardErrorGraphicImageTypeNotSupport = 3130009,
    /**
     * 无效图片地址，可能的原因有：指定图片时传入了无效的网络 URL。指定图片时传入了无效的本地路径。
     */
    ZegoSuperBoardErrorGraphicIllegalAddress = 3130010,
    /**
     * 光标设置偏移值超出限制
     */
    ZegoWhiteboardViewErrorGraphicCursorOffsetLimit = 3130011,
    /**
     * 初始化失败
     */
    ZegoSuperBoardErrorInitFail = 3140001,
    /**
     * 拉取白板 view 列表失败
     */
    ZegoSuperBoardErrorGetListFail = 3140002,
    /**
     * 创建白板 view 失败
     */
    ZegoSuperBoardErrorCreateFail = 3140003,
    /**
     * 销毁白板 view 失败
     */
    ZegoSuperBoardErrorDestroyFail = 3140004,
    /**
     * attach 白板 view 失败
     */
    ZegoSuperBoardErrorAttachFail = 3140005,
    /**
     * 清空白板 view 失败。
     */
    ZegoSuperBoardErrorClearFail = 3140006,
    /**
     * 滚动白板 view 失败
     */
    ZegoSuperBoardErrorScrollFail = 3140007,
    /**
     * 撤销操作失败
     */
    ZegoSuperBoardErrorUndoFail = 3140008,
    /**
     * 重做操作失败
     */
    ZegoSuperBoardErrorRedoFail = 3140009,
    /**
     * 切换白板失败
     */
    ZegoSuperBoardErrorSwitchFail = 3140012,
    /**
     * 无白板缩放权限
     */
    ZegoSuperBoardErrorNoAuthScale = 3150001,
    /**
     * 无白板滚动权限
     */
    ZegoSuperBoardErrorNoAuthScroll = 3150002,
    /**
     * 无图元创建权限
     */
    ZegoSuperBoardErrorNoAuthCreateGraphic = 3150003,
    /**
     * 无图元编辑权限
     */
    ZegoSuperBoardErrorNoAuthUpdateGraphic = 3150004,
    /**
     * 无白板移动权限
     */
    ZegoSuperBoardErrorNoAuthMoveGraphic = 3150005,
    /**
     * 无白板删除权限
     */
    ZegoSuperBoardErrorNoAuthDeleteGraphic = 3150006,
    /**
     * 无白板清空权限
     */
    ZegoSuperBoardErrorNoAuthClearGraphic = 3150007,
    /**
     * 文件相关
     */
    ZegoSuperBoardErrorDocParamInvalid = 3100002,
    /**
     * 找不到对应的本地文件，可能的原因包括：上传时访问了错误的文件路径。本地文件已被删除
     */
    ZegoSuperBoardErrorFileNotExist = 3111001,
    /**
     * 上传失败
     */
    ZegoSuperBoardErrorUploadFailed = 3111002,
    /**
     * 不支持渲染模式
     */
    ZegoSuperBoardErrorUnsupportRenderType = 3111003,
    /**
     * 需要转码的文件被加密，可能的原因包括：Word 文件访问需要密码。Excel 文件访问需要密码。PPT 文件访问需要密码
     */
    ZegoSuperBoardErrorFileEncrypt = 3121001,
    /**
     * 文件内容过大，可能的原因包括：Excel 文件大小超过 10 MB。Excel 文件打开时间过久。文本文件大小超过 2 MB。其他文件大小超过 100 MB。
     */
    ZegoSuperBoardErrorFileSizeLimit = 3121002,
    /**
     * 文件页数过多，可能的原因包括：Excel 文件 sheet 数量超过 20。Word 文件页数超过 500。PPT 文件页数超过 500。
     */
    ZegoSuperBoardErrorFileSheetLimit = 3121003,
    /**
     * 格式转换失败
     */
    ZegoSuperBoardErrorConvertFail = 3121004,
    /**
     * 格式转换被取消
     */
    ZegoSuperBoardErrorConvertCancel = 3121005,
    /**
     * 文件内容为空，可能的原因包括：PDF 文件内无内容。PPT 文件内没有幻灯片。Excel 文件内无内容。Word 文件内无内容。
     */
    ZegoSuperBoardErrorFileContentEmpty = 3121006,
    /**
     * 文件为只读模式，可能的原因包括：动态 PPT 文件被设置为只读模式，会导致转码失败。动态 PPT 文件中包含转码服务器不支持的字体，会导致转码失败。
     */
    ZegoSuperBoardErrorFileReadOnly = 3121007,
    /**
     * 源文件中存在不支持转码的元素。
     */
    ZegoSuperBoardErrorConvertElementNotSupported = 3121008,
    /**
     * 文件后缀名不符合 ZEGO 定义的文件规范。
     */
    ZegoSuperBoardErrorConvertFileTypeInvalid = 3121009,
    /**
     * 文件损坏
     */
    ZegoSuperBoardErrorFileCorruption = 3131018,
    /**
     * 文件内容不完整。
     */
    ZegoSuperBoardErrorFileContentIncomplete = 3131019,
    /**
     * 认证参数错误
     */
    ZegoSuperBoardErrorAuthParamInvalid = 3131001,
    /**
     * 路径权限不足，可能的原因包括：初始化时传入的 log 目录不可用。初始化时传入的 cache 目录不可用。初始化时传入的 data 目录不可用。
     */
    ZegoSuperBoardErrorFilePathNotAccess = 3131002,
    /**
     * 初始化失败
     */
    ZegoSuperBoardErrorInitFailed = 3131003,
    /**
     * 请在挂载 view 之前，确保能够读取当前容器的有效宽度和高度。
     */
    ZegoSuperBoardErrorSizeInvalid = 3131004,
    /**
     * 本地空间不足
     */
    ZegoSuperBoardErrorFreeSpaceLimit = 3131005,
    /**
     * 不支持文件上传功能
     */
    ZegoSuperBoardErrorUploadNotSupported = 3131006,
    /**
     * 正在上传相同文件
     */
    ZegoSuperBoardErrorUploadDuplicated = 3131007,
    /**
     * 空域名
     */
    ZegoSuperBoardErrorEmptyDomain = 3131008,
    /**
     * 已初始化
     */
    ZegoSuperBoardErrorDuplicateInit = 3131009,
    /**
     * 找不到对应的转码后文件。可能的原因包括：访问文件时传入了错误的 fileID，比如该文件上传时和当前访问时使用了不同的 AppID。对应的转码后文件已经被删除。文件的上传环境和文件的访问环境不一致。
     */
    ZegoSuperBoardErrorServerFileNotExist = 3131010,
    /**
     * 初始化时设置的日志目录无法创建或写入
     */
    ZegoSuperBoardErrorDocLogFolderNotAccess = 3131011,
    /**
     * 初始化时设置的缓存目录无法创建或写入
     */
    ZegoSuperBoardErrorDocCacheFolderNotAccess = 3131012,
    /**
     * 初始化时设置的数据目录无法创建或写入
     */
    ZegoSuperBoardErrorDocDataFolderNotAccess = 3131013,
    /**
     * 不支持预加载该文件，请联系 ZEGO 技术支持，可能的原因包括：当前 AppID 未开通该服务。该文件暂不支持预加载。
     */
    ZegoSuperBoardErrorCacheNotSupported = 3131014,
    /**
     * 预加载失败，可能的原因包括：网络故障导致预加载失败。
     */
    ZegoSuperBoardErrorCacheFailed = 3131015,
    /**
     * 无效的 ZIP 文件，可能的原因包括：不是合法的 ZIP 文件。文件损坏。
     */
    ZegoSuperBoardErrorZipFileInvalid = 3131016,
    /**
     * 无效的 H5 文件，不符合 ZEGO 定义的 H5 文件规范，可能的原因包括：文件中没有 index.html。
     */
    ZegoSuperBoardErrorH5FileInvalid = 3131017,
    /**
     * H5 没有调用 getReady 会出现。
     */
    ZegoBridgeErrorNotReady = 3112001,
    /**
     * 参数错误，H5 调用脚本接口参数不符合要求时出现。
     */
    ZegoBridgeErrorParamInvalid = 3112002,
    /**
     * recordList 字节长度超过限制，H5 调用操作相关接口导致当前页的 recordList 超出最大长度限制（base64 后最大为 948 字节）。
     */
    ZegoBridgeErrorRecordListLimit = 3112003,
    /**
     * H5 内部代码执行出错。
     */
    ZegoBridgeErrorH5 = 3112006,
    /**
     * 源文件中存在安全隐患，无法正常打开
     */
    ZegoSuperBoardErrorConvertFileUnsafe = 3121010,
    /**
     * 转码结束后中存在图片、音视频文件未正常导出
     */
    ZegoSuperBoardErrorConvertElementNotExported = 3121011,
    /**
     * 多次重试后请求失败的错误码, 请求失败
     */
    ZegoSuperBoardErrorRequestFailure = 3100009,
    /**
     * 白板 token 过期
     */
    ZegoSuperBoardErrorWhiteboardTokenInvalid = 3100010,
    /**
     * 白板 token 过期
     */
    ZegoSuperBoardErrorDocsTokenInvalid = 3100011,
    /**
     *  Get canvas context Fail
     */
    ZegoSuperBoardErrorGetContextFail = 3130021,
    /**
     * Cavnas DrawImage Fail
     */
    ZegoSuperBoardErrorDrawImageFail = 3130022,
    /**
     * Switch Speaker Fail
     */
    ZegoSuperBoardErrorSwitchSpeakerFail = 3130023
}
/**
 * 可见区域的宽高
 *
 */
export interface Size {
    /**
     * 详情描述：可视区域的宽度
     */
    width: number;
    /**
     * 详情描述：可视区域的高度
     */
    height: number;
}
export interface ZegoLogConfig {
    /**
     * 本地 log 级别,等级越高,打印日志越少
     * logLevel: 'debug' | 'info' | 'warn' | 'error' | 'report' | 'disable'
     */
    logLevel: string;
    /**
     * 上报 log 级别，等级越高,上传日志越少
     * remoteLogLevel: 'debug' | 'info'| 'warn' | 'error' | 'disable'
     */
    remoteLogLevel: string;
}
/**
 * 上传文件配置项
 */
export interface uploadOptions {
    renderImgType: RenderImgType;
}
/**
 * 转码图片格式类型
 */
export declare enum RenderImgType {
    PNG = 1,
    SVG = 2
}
/**
 * 预加文件进度
 */
export interface ZegoSuperBoardStaticCacheModel {
    /**
     * 缓存文件对应的 seq
     */
    seq: number;
    /**
     * 当前缓存状态
     */
    state: CacheState;
    /**
     * 该文件总资源数
     */
    totalFileNum: number;
    /**
     * 该文件预请求失败资源数
     */
    failedFileNum: number;
    /**
     * 该文件预请求成功资源数
     */
    loadedFileNum: number;
}
export declare enum CacheState {
    Caching = 1,
    Cached = 2
}
/**
 * 预加 H5 文件结果
 *
 */
export interface ZegoSuperBoardDynamicCacheModel {
    /**
     * 该文件总资源数
     */
    totalFileNum: number;
    /**
     * 该文件预请求失败资源数
     */
    failedFileNum: number;
}
export interface CacheFileMapModel {
    result: ZegoSuperBoardStaticCacheModel;
    hasCancel: boolean;
    requestPromise?: Promise<string[]>;
    listener?: ZegoSuperBoardCacheFileCallBack;
    cbTimer: any;
}
/**
 * 预加文件进度
 */
export interface ZegoSuperBoardStaticCacheModel {
    /**
     * seq
     */
    seq: number;
    /**
     * seq
     */
    state: CacheState;
    /**
     * 该文件总资源数
     */
    totalFileNum: number;
    /**
     * 该文件预请求失败资源数
     */
    failedFileNum: number;
    /**
     * 该文件预请求失败资源数
     */
    loadedFileNum: number;
}
export {};
